* {
  margin: 0;
  padding: 0;
  /* 
    마진값과 패딩값을 0으로 설정
    브라우저마다 default 값이 다른 마진값과 패딩값을 0으로 설정하여 코딩하기 편하게 세팅하기 위함
  */
  box-sizing: border-box; /* 사이트 디폴트 값이자 패딩과 보더 값이 보정되어 크기가 늘어나는 content-box를 바꿔서 세팅하기 위함 */
  font-family: 'poppins', sans-serif; /* 폰트 변경 */
}

body {
  background: url('background.jpg') no-repeat;  /* 해당 사진으로 배경을 변경하고 반복을 없앰 이로인해 사진크기가 웹사이트 창보다 작을때 사진이 여러장 붙어있는 현상이 방지됨 */
  display: flex;  /* 자식요소를 가로 기준 같은 줄에 배치 */
  justify-content: center;  /* 가로(좌우)축 가운데 정렬 */
  align-items: center;   /* 세로(상하)축 가운데 정렬 */
  min-height: 100vh;  /* vh:현재 화면의 높이를 기준으로하는 상대적 단위, 즉 스크롤을 하지 않아도 화면 전체를 채우는 높이가 됨 */
  background-size: cover;
  background-position: center;
  /* 
    위에껀 화면 배경 전체를 덮는거고 밑에껀 사진을 중간값으로 두어서 cover 값의 영향을 주는걸로 알아 특히 해당코드를 적용하면서 알게된 사실인데 해당코드 2개 덕분에 창크기를 아무리 줄여도 사진이 깨지지 않더라고 정말 신기한 코드였어
  */
}

header {
  position: fixed;  /* 스크롤을 내리더라도 고정되어있게 함 */
  top: 0;
  left: 0;
  /*
    top과 left값을 0으로 설정해서 상단에 위치할수 있게 함 해당 코드가 필요한 이유는 
    Body의 justify-content: center; align-items: center; 이거 때문이 아닌가 싶음 그래서 이 코드가 없으면 사이트 정 중앙에 위치하게 됨 
  */
  width: 100%;  /* 가로값의 전체 사용 여기선 특별히 정해진 값이 없으니 웹사이트 전체 가로값 */
  padding: 20px 100px;    /* 위아래로 20, 좌우로 100 여백 주기 */
  display: flex;
  justify-content: space-between;
  align-items: center;
  z-index: 99;  /* 우선도?라고 해야하나 얘가 있음으로 인해 컨텐츠가 겹치더라도 header가 맨 위로 올 수 있는걸로 암 */
}

.logo {
  font-size: 2em; /* 폰트사이즈를 조절하는데 em의 경우는 부모 요소의 폰트크기의 2배인걸로 암*/
  color: #fff;  /* 글자색 흰색 */
  user-select: none;  /*드래그방지*/
}

.navigation a {
  position: relative; /* 위치를 재정렬시키고 이 코드가 자식의 position:absolute의 기준점이 되게 하기 위함이 있는걸로 알고있음 */
  font-size: 1.1em;
  color: #fff;
  text-decoration: none; /* a태그 특성상 파란색에 밑줄이 있고 클릭시 보라색으로 바뀌는데 그 이펙트를 없애주는 역할 */
  font-weight: 500; /* 글자 굵기 */
  margin-left: 40px; /* 서로 붙지 않게 하기위해 왼쪽으로 40px 공간을 두고 띄우게 함 */
}

.navigation a::after {
  content: ''; /* 비워 놓음으로써 해당 a::after를 순전히 막대 바가 출력되게 함 글자 x */
  position: absolute; /* 부모요소를 기준으로 포지션값을 설정하게 하는 코드 여기선 부모가 a태그*/
  left: 0;
  bottom: -6px;
  /*
    얘에 대해선 좀 궁금한게 있어서 물어봤음 이 해당 섹션(a::after)은 결국 a 태그 글자 밑에 작은 가로로 기다란 선이 나오게 하는게 목적 근데 그 선의 위치가 브라우저가 설정하기에 최적화 된 위치에 가있음 그래서 원하는 위치로 이동하게 하기위한 코드 해당 코드로 인해 가로로 기다란 선이 글자 밑으로 가게 됨
  */
  width: 100%; /* 부모인 a태그 너비 그대로 사용하겠다는 코드 */
  height: 3px; /* 높이 3px */
  background: #fff;
  border-radius: 5px; /* 모서리를 둥글게 하는 코드 숫자가 클수록 원에 가까워짐 */
  transform-origin: right; /* 애니메이션 방향 오른쪽, 즉 왼쪽에서 시작 */
  transform: scaleX(0); /* 기본적인 상태에선 비활성화 */
  transition: transform .5s; /* 애니메이션 모션 속도 */
}

.navigation a:hover::after {
  transform-origin: left;  /* 애니메이션 방향 오른쪽, 즉 도착하는곳 오른쪽 */
  transform: scaleX(1); /* 활성화 */
}

.navigation .btnLogin-popup {
  width: 130px; /* 너비 */
  height: 50px; /* 높이 */
  background: transparent; /* 배경색은 부모와 같게함 */
  border: 2px solid #fff; /* 2px짜리 하얀색 실선으로 감싸겠다 선언 */
  outline: none; /* 요소에 포커스(focus)가 갔을 때 생기는 파란색 또는 검은색 외곽선을 제거하는 코드 */
  border-radius: 6px;
  cursor: pointer; /* 마우스 올렸을때 손모양으로 바뀜 */
  font-size: 1.1em; 
  color: #fff;
  font-weight: 500;
  margin-left: 40px;
  transition: .5s;
}